export const titlesWithDescription = [
    {
        title: "JS это",
        shortDesc: "JS - Мультипарадигменный язык программирования, который добавляет интерактивность и динамику вебсайтам и приложениям (EcmaScript)",
        description: "Может выполняться в браузере, на сервере и в любом устройстве где есть движок JS. <br> Возможности js сильно зависят от среды, в которой запущен, например в браузере может добавлять Html, вазимодействовать с пользователями, менять стили, отправлять запросы, но <strong>не может</strong> записывать/читать/ файлы на жестком диске, запускать программы и т.д. "
    },
    {
        title: "Движки JS",
        shortDesc: "Это программа для выполнения кода JS в браузере, на сервере или устройстве <p>(<strong>V8</strong> - chrome,opera; <strong>Spider Monkey</strong> - Firefox; <strong>Trident, Chakra</strong> - IE; <strong>Nitro, SquirrelFish</strong> - Safari</p>",
        description: "<ul><li>Сперва движок парсит (читает текст скрипта) </li><li>Затем он компилирует (преобразует) скрипт в машинный язык <li>Применяя оптимизации запускает и выполняет машинный код</li></li></ul>"
    },
    {
        title: "Ссылки",
        shortDesc: "<a target='_blank' href='http://caniuse.com'>http://caniuse.com</a> ",
        description: "<a target='_blank' href='http://caniuse.com'>http://caniuse.com</a> - таблицы с информацией по поддержке движками браузеров новых возможностей"
    },
    {
        title: "<script>",
        shortDesc: "Добавляет JS в HTML <p><code><span class='code-example'>&lt;script src='file.js'&gt;&lt;/script&gt;<br>&lt;script&gt;alert(1);&lt;/script&gt;</span></code>",
        description: "<ul><li>Лучше выделять JS в отдельный файл, т.к. они загружаются отдельно и хранятся в кэше, что позволит другим подключающим данный скрипт страницам брать его из кэша</li><li>СЮда остальное</li></ul>"
    }, 
    {
        title: "Комментарии",
        shortDesc: "// - однострочные <br> /* многострочные */ <br> в HTML - &lt;!-- любой текст --&gt;",
        description: ""
    }, 
    {
        title: "Переменные",
        shortDesc: "Именованное хранилище для данных <ul><li> var - объявляет глобальную переменную</li><li>let - объявляет блочную переменую</li> <li>const - объявляет неизменную константу (блочная)</li>",
        description: "В названии первый символ не должен быть цифрой и не содержать '-'. Нельзя использовать зарезервированные именя let, class, return, function и т.д."
    }, 
    {
        title: "Типы данных",
        shortDesc: "JS динамически типизированный, так как в переменную можно поместить любой из 8 типов данных (String, Number, Boolean, Object, Undefined, Null, BigInt, Symbol)",
        description: "<ul><li>number для любых чисел: целочисленных или чисел с плавающей точкой; целочисленные значения ограничены диапазоном ±(253-1).</li><li>bigint для целых чисел произвольной длины > ±(253-1) </li><li>string для строк. Строка может содержать ноль или больше символов, нет отдельного символьного типа.</li><li>boolean для true/false.</li><li>null для неизвестных значений – отдельный тип, имеющий одно значение null.</li><li>undefined для неприсвоенных значений – отдельный тип, имеющий одно значение undefined</li><li>object для более сложных структур данных.</li><li>symbol для уникальных идентификаторов.</li></ul><hr>typeof x или typeof(x) - возвращает строковое значение типа данных, <br>например typeof 1 = 'number', <br>typeof null = 'object'(специальная ошибка языка)"
    },
     {
         title: "alert, prompt,confirm",
         shortDesc: "<ul><li><span class='code-example'>let age = prompt('Сколько тебе лет?', 100);</span> - задает вопрос и присваивает ответ в переменную</li><li><span class='code-example'>alert('Hello');</span> - показывает сообщение</li><li><span class='code-example'>let isBoss = confirm('Ты здесь главный?');</span> - задает вопрос и присваивает переменной true или false</li></ul>",
         description: "Данные методы являются модальными, тоесть останавливают выполнение скрипта и не позволяют взаимодействовать со страницей. Расположение и внешний вид окна зависит от браузера."
     },
     { 
         title: "Приведение типов", 
         shortDesc: "<ul><li>Строковое String(value) - происходит когда нужно чтото вывести</li><li>Численное Number(value), +'1' - При математических операциях</li><li>Логическое Boolean(value) - При логических операциях</li></ul>",
         description: "<hr><ul><li>При строковом преобразовании: null - 'null', undefined - 'undefined' </li><li>При численном преобразовании: Undefined - NaN, <br>null - 0, true/false - 1/0,'string' - пробелы по краям обрезаются, если осталась пустая строка то 0, если число то считывается, иначе NaN </li><li> При логическом преобразовании: 0, null, undefined, NaN - false. Все остальное true, даже строка '&emsp;' или '0' тоже true</li>"
     },
    {
        title: "Базовые операторы", 
        shortDesc: "5 * 2 - (5) и (2) операнды или аргументы, (*) - бинарный операнд, так как применяется к двум операндам. +'1' - (+) унарный т.к. к одному операнду",
        description: "<ul><li>1 + 1 (2) сложение</li><li>1 - 1 (0) вычитание</li><li> 2 * 2 (4) умножение</li><li>4 / 2 (2) деление</li><li>5 % 2 (1) взятие остатка от деление</li><li>2 ** 3 (8) возведение в степень</li><li>a = 2 + 1 (3) присвоение</li><li><span class='code-example'>++counter</span> префиксный инкремент (-- декремент) увеличивает и возвращает увеличенное </li><li><span class='code-example'>counter++</span> постфиксный инкремент (-- декремент) возвращает значение затем увеличивает </li></ul> <hr> Бинарный плюс, если один из операндов строка - приводит к строке (2 + 2 + '1' = 41)"
    }
]